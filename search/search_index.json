{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"What is it? This is a program which compares two NetCDF files. Only NetCDF variables with type NC_FLOAT or NC_DOUBLE are compared. The program either compares variables with the same NetCDF ID ( varid ) or variables with the same name. Compared variables are assumed to have the same type and the program checks that they have the same shape. For each such couple of variables, the program computes the maximum of the absolute value of the difference, and the maximum of the absolute value of the relative difference. The program also tells you at what location (the subscript list of the array) the maximum difference is reached. Author: Lionel GUEZ","title":"What is it?"},{"location":"#what-is-it","text":"This is a program which compares two NetCDF files. Only NetCDF variables with type NC_FLOAT or NC_DOUBLE are compared. The program either compares variables with the same NetCDF ID ( varid ) or variables with the same name. Compared variables are assumed to have the same type and the program checks that they have the same shape. For each such couple of variables, the program computes the maximum of the absolute value of the difference, and the maximum of the absolute value of the relative difference. The program also tells you at what location (the subscript list of the array) the maximum difference is reached. Author: Lionel GUEZ","title":"What is it?"},{"location":"French_centers/","text":"Note for the users of French supercomputing centers max_diff_nc is installed: on the machine spirit of IPSL computing center at: /data/guez/bin/max_diff_nc.sh on the machine irene of TGCC computing center at: /ccc/work/cont003/gencmip6/guezl/bin/max_diff_nc.sh on the machine jean-zay of IDRIS computing center at: /gpfswork/rech/lmd/rdzt899/bin/max_diff_nc.sh","title":"Note for the users of French supercomputing centers"},{"location":"French_centers/#note-for-the-users-of-french-supercomputing-centers","text":"max_diff_nc is installed: on the machine spirit of IPSL computing center at: /data/guez/bin/max_diff_nc.sh on the machine irene of TGCC computing center at: /ccc/work/cont003/gencmip6/guezl/bin/max_diff_nc.sh on the machine jean-zay of IDRIS computing center at: /gpfswork/rech/lmd/rdzt899/bin/max_diff_nc.sh","title":"Note for the users of French supercomputing centers"},{"location":"bug_gfortran/","text":"Known bug of old Gfortran There is a known problem in older versions of Gfortran, fixed in version 4.4.5 of Gfortran. The program max_diff_nc prints differences with the Fortran format 1pg7.1 . Older versions of Gfortran produce wrong results with this format. For example, according to the Fortran 95 standard, printing the number 0.96 with the format 1pg7.1 should give the same result than with format f3.0 . Thus, the result should be 1. , but Gfortran produces the surprising result 0. If you cannot use another compiler, a work-around is to change 1pg7.1 to 1pg8.2 in the file compare.f90 of library Jumble.","title":"Known bug of old Gfortran"},{"location":"bug_gfortran/#known-bug-of-old-gfortran","text":"There is a known problem in older versions of Gfortran, fixed in version 4.4.5 of Gfortran. The program max_diff_nc prints differences with the Fortran format 1pg7.1 . Older versions of Gfortran produce wrong results with this format. For example, according to the Fortran 95 standard, printing the number 0.96 with the format 1pg7.1 should give the same result than with format f3.0 . Thus, the result should be 1. , but Gfortran produces the surprising result 0. If you cannot use another compiler, a work-around is to change 1pg7.1 to 1pg8.2 in the file compare.f90 of library Jumble.","title":"Known bug of old Gfortran"},{"location":"changes/","text":"Changes before version control (See Github page for more recent changes.) April 8th, 2014. max_diff_nc now reads NetCDF float variables into real Fortran variables and NetCDF double variables into double precision Fortran variables. (For the sake of lower memory usage.) May 10th, 2013. The default behaviour of max_diff_nc is now to read NetCDF variables into double precision Fortran variables. It is now easy to switch to another real precision (just modify the definition of wp in max_diff_nc.f90 ). June 12th, 2012. When comparing variables with the same name, if a name is not found in the second file, the program now just skips the comparison, instead of stopping. September 8th, 2011. Added option -v for comparison of a given variable. Generalized installation process to accomodate version 4 of NetCDF. April 28th, 2010. Added comparison by variable name. Comparison by variable ID, which was the only choice before, is now selected by option -i .","title":"Changes before version control"},{"location":"changes/#changes-before-version-control","text":"(See Github page for more recent changes.) April 8th, 2014. max_diff_nc now reads NetCDF float variables into real Fortran variables and NetCDF double variables into double precision Fortran variables. (For the sake of lower memory usage.) May 10th, 2013. The default behaviour of max_diff_nc is now to read NetCDF variables into double precision Fortran variables. It is now easy to switch to another real precision (just modify the definition of wp in max_diff_nc.f90 ). June 12th, 2012. When comparing variables with the same name, if a name is not found in the second file, the program now just skips the comparison, instead of stopping. September 8th, 2011. Added option -v for comparison of a given variable. Generalized installation process to accomodate version 4 of NetCDF. April 28th, 2010. Added comparison by variable name. Comparison by variable ID, which was the only choice before, is now selected by option -i .","title":"Changes before version control"},{"location":"example_1/","text":"Example run without -m The command line is: $ max_diff_nc.sh 111/histrac.nc 113/histrac.nc In this example, max_diff_nc is invoked without the options -s , -m or -i . Here is the output: standard output comment Found 25 variable(s) in group / in the first file. The program found 25 variables in the root group of the first file. In this example, there are no subgroups. 23 of the variables are identical to the variables with same name in the second file. As the option -s was not used, those 23 identical variables do not appear below. Only two variables for which differences were found appear. --------------------------------------------- Variable \"masse\": Relative difference for non-zero values: Maximum difference: 2.7E-03 Occurring at: data_old(14 7 4 1) = 6.97899061E+15 data_new(14 7 4 1) = 6.95995316E+15 masse is a 4-dimensional array. The location of the maximum is given by the set of 4 indices: 14 7 4 1. These are the Fortran indices: the list of dimensions is reversed from the list given by ncdump -h ; the indices start at 1 in each dimension (The location of the maximum is repeated for the two arrays but, of course, it is by definition the same location.) You can see that 6.97899061E+15 / 6.95995316E+15 - 1 ~= 2.7E-03 Absolute difference: Maximum difference: 2.3E+13 Occurring at: data_old(14 7 5 1) = 8.52667026E+15 data_new(14 7 5 1) = 8.50399659E+15 There is no zero value in data_old or data_new so the program only prints the maximum absolute difference for the whole arrays. ||data_new - data_old||_infinite / ||data_old||_infinite = 2.6E-03 This is the infinite norm (that is, maximum of absolue value) of the difference divided by the infinite norm of data_old . Note that you had the infinite norm of the difference just above (2.3E+13 in this example) so this also gives you the infinite norm of data_old . ------------------------------------------- Variable \"d_tr_cv_RN\": Relative difference for non-zero values: Maximum difference: 1.6E+07 Occurring at: data_old(3 16 1 1) = 1.6982631E-24 data_new(3 16 1 1) = 2.7377417E-17 Absolute difference when there is a zero: Maximum difference: 5.9E+03 Occurring at: data_old(19 15 1 1) = -5863.641 data_new(19 15 1 1) = 0. Absolute difference: Maximum difference: 6.6E+03 Occurring at: data_old(11 12 1 1) = -8759.474 data_new(11 12 1 1) = -2166.5264 There are zero values at some locations in data_old or data_new so the program prints two results: for locations where there is a zero value and for the whole arrays.","title":"Example run without -m"},{"location":"example_1/#example-run-without-m","text":"The command line is: $ max_diff_nc.sh 111/histrac.nc 113/histrac.nc In this example, max_diff_nc is invoked without the options -s , -m or -i . Here is the output: standard output comment Found 25 variable(s) in group / in the first file. The program found 25 variables in the root group of the first file. In this example, there are no subgroups. 23 of the variables are identical to the variables with same name in the second file. As the option -s was not used, those 23 identical variables do not appear below. Only two variables for which differences were found appear. --------------------------------------------- Variable \"masse\": Relative difference for non-zero values: Maximum difference: 2.7E-03 Occurring at: data_old(14 7 4 1) = 6.97899061E+15 data_new(14 7 4 1) = 6.95995316E+15 masse is a 4-dimensional array. The location of the maximum is given by the set of 4 indices: 14 7 4 1. These are the Fortran indices: the list of dimensions is reversed from the list given by ncdump -h ; the indices start at 1 in each dimension (The location of the maximum is repeated for the two arrays but, of course, it is by definition the same location.) You can see that 6.97899061E+15 / 6.95995316E+15 - 1 ~= 2.7E-03 Absolute difference: Maximum difference: 2.3E+13 Occurring at: data_old(14 7 5 1) = 8.52667026E+15 data_new(14 7 5 1) = 8.50399659E+15 There is no zero value in data_old or data_new so the program only prints the maximum absolute difference for the whole arrays. ||data_new - data_old||_infinite / ||data_old||_infinite = 2.6E-03 This is the infinite norm (that is, maximum of absolue value) of the difference divided by the infinite norm of data_old . Note that you had the infinite norm of the difference just above (2.3E+13 in this example) so this also gives you the infinite norm of data_old . ------------------------------------------- Variable \"d_tr_cv_RN\": Relative difference for non-zero values: Maximum difference: 1.6E+07 Occurring at: data_old(3 16 1 1) = 1.6982631E-24 data_new(3 16 1 1) = 2.7377417E-17 Absolute difference when there is a zero: Maximum difference: 5.9E+03 Occurring at: data_old(19 15 1 1) = -5863.641 data_new(19 15 1 1) = 0. Absolute difference: Maximum difference: 6.6E+03 Occurring at: data_old(11 12 1 1) = -8759.474 data_new(11 12 1 1) = -2166.5264 There are zero values at some locations in data_old or data_new so the program prints two results: for locations where there is a zero value and for the whole arrays.","title":"Example run without -m"},{"location":"example_2/","text":"Example run with -m Here is an example illustrating the -m option. We examine the same two files as in the example without -m . The command line is: $ max_diff_nc.sh -m 111/histrac.nc 113/histrac.nc and here is the output: standard output comment Found 25 variable(s) in the first file. --------------------------------------------- Variable \"zmasse\": Average value of log10(abs(data_old)): 3. This is the additional information provided for each variable by the -m option. The average is computed over non-zero values of data_old , and the number of values used is the number of non-zero values. Relative difference for non-zero values: Maximum difference: 3.3E-03 Occurring at: data_old(19 13 3 1) = 1522.2444 data_new(19 13 3 1) = 1527.2977 Absolute difference: Maximum difference: 7. Occurring at: data_old(18 13 4 1) = 2297.566 data_new(18 13 4 1) = 2304.862 --------------------------------------------- Variable \"d_tr_cv_RN\": Average value of log10(abs(data_old)): -6. Relative difference for non-zero values: Maximum difference: 1.6E+07 Occurring at: data_old(3 16 1 1) = 1.6982631E-24 data_new(3 16 1 1) = 2.7377417E-17 Absolute difference when there is a zero: Maximum difference: 5.9E+03 Occurring at: data_old(19 15 1 1) = -5863.641 data_new(19 15 1 1) = 0. Absolute difference: Maximum difference: 6.6E+03 Occurring at: data_old(11 12 1 1) = -8759.474 data_new(11 12 1 1) = -2166.5264","title":"Example run with -m"},{"location":"example_2/#example-run-with-m","text":"Here is an example illustrating the -m option. We examine the same two files as in the example without -m . The command line is: $ max_diff_nc.sh -m 111/histrac.nc 113/histrac.nc and here is the output: standard output comment Found 25 variable(s) in the first file. --------------------------------------------- Variable \"zmasse\": Average value of log10(abs(data_old)): 3. This is the additional information provided for each variable by the -m option. The average is computed over non-zero values of data_old , and the number of values used is the number of non-zero values. Relative difference for non-zero values: Maximum difference: 3.3E-03 Occurring at: data_old(19 13 3 1) = 1522.2444 data_new(19 13 3 1) = 1527.2977 Absolute difference: Maximum difference: 7. Occurring at: data_old(18 13 4 1) = 2297.566 data_new(18 13 4 1) = 2304.862 --------------------------------------------- Variable \"d_tr_cv_RN\": Average value of log10(abs(data_old)): -6. Relative difference for non-zero values: Maximum difference: 1.6E+07 Occurring at: data_old(3 16 1 1) = 1.6982631E-24 data_new(3 16 1 1) = 2.7377417E-17 Absolute difference when there is a zero: Maximum difference: 5.9E+03 Occurring at: data_old(19 15 1 1) = -5863.641 data_new(19 15 1 1) = 0. Absolute difference: Maximum difference: 6.6E+03 Occurring at: data_old(11 12 1 1) = -8759.474 data_new(11 12 1 1) = -2166.5264","title":"Example run with -m"},{"location":"installation/","text":"Installation See note for users of French supercomputing centers. Dependencies max_diff_nc is written in Fortran (2003) and Bash so you need a Fortran compiler and Bash on your machine. Install the library NetCDF-Fortran , with the same Fortran compiler than the one you want to use for Max_diff_nc . CMake (version \u2265 3.17) 1 . Instructions Get max_diff_nc from Github . As the Git repository contains a submodule, the easiest way is to type: git clone --recurse-submodules https://github.com/lguez/Max_diff_nc.git If you prefer to download a ZIP file then you will also have to download the cmake subdirectory . Create a build subdirectory in the directory you have just downloaded: cd Max_diff_nc mkdir build cd build Choose the installation directory CMAKE_INSTALL_PREFIX and type the command below with your choice after -DCMAKE_INSTALL_PREFIX= (enter an absolute path). The installation process will install a shell script, max_diff_nc.sh , in $CMAKE_INSTALL_PREFIX/bin . It is convenient for $CMAKE_INSTALL_PREFIX/bin to be in your PATH environment variable. For example: cmake .. -DFETCH=ON -DCMAKE_INSTALL_PREFIX=~/.local Type: make install You do not need to keep the downloaded directory Max_diff_nc (nor the build directory) after installation. Note that the installation process also installs a Fortran executable file, max_diff_nc , in $CMAKE_INSTALL_PREFIX/libexec . Do not remove this file. Advanced instructions You can choose any name and any location for the build directory. You have to refer to the source directory when you run cmake from the build directory: mkdir /wherever/any/name cd /wherever/any/name cmake /where/I/downloaded/Max_diff_nc -DFETCH=ON -DCMAKE_INSTALL_PREFIX=~/.local The option -DFETCH=ON instructs CMake to download, compile and install the libraries NetCDF95 and Jumble . If you have already installed these libraries, you can omit the FETCH option. Troubleshooting If your installation of NetCDF-Fortran is in a non-standard location, and CMake does not find it, then re-run cmake setting the variable CMAKE_PREFIX_PATH to the directory containing it. CMake will then search ${CMAKE_PREFIX_PATH}/lib , ${CMAKE_PREFIX_PATH}/include , etc. For example: cmake . -DCMAKE_PREFIX_PATH:PATH=/path/to/my/favorite/installation On Mac OS, after downloading the application from the CMake web site, run it, then click on \u201cHow to Install For Command Line Use\u201d in the Tools menu. \u21a9","title":"Installation"},{"location":"installation/#installation","text":"See note for users of French supercomputing centers.","title":"Installation"},{"location":"installation/#dependencies","text":"max_diff_nc is written in Fortran (2003) and Bash so you need a Fortran compiler and Bash on your machine. Install the library NetCDF-Fortran , with the same Fortran compiler than the one you want to use for Max_diff_nc . CMake (version \u2265 3.17) 1 .","title":"Dependencies"},{"location":"installation/#instructions","text":"Get max_diff_nc from Github . As the Git repository contains a submodule, the easiest way is to type: git clone --recurse-submodules https://github.com/lguez/Max_diff_nc.git If you prefer to download a ZIP file then you will also have to download the cmake subdirectory . Create a build subdirectory in the directory you have just downloaded: cd Max_diff_nc mkdir build cd build Choose the installation directory CMAKE_INSTALL_PREFIX and type the command below with your choice after -DCMAKE_INSTALL_PREFIX= (enter an absolute path). The installation process will install a shell script, max_diff_nc.sh , in $CMAKE_INSTALL_PREFIX/bin . It is convenient for $CMAKE_INSTALL_PREFIX/bin to be in your PATH environment variable. For example: cmake .. -DFETCH=ON -DCMAKE_INSTALL_PREFIX=~/.local Type: make install You do not need to keep the downloaded directory Max_diff_nc (nor the build directory) after installation. Note that the installation process also installs a Fortran executable file, max_diff_nc , in $CMAKE_INSTALL_PREFIX/libexec . Do not remove this file.","title":"Instructions"},{"location":"installation/#advanced-instructions","text":"You can choose any name and any location for the build directory. You have to refer to the source directory when you run cmake from the build directory: mkdir /wherever/any/name cd /wherever/any/name cmake /where/I/downloaded/Max_diff_nc -DFETCH=ON -DCMAKE_INSTALL_PREFIX=~/.local The option -DFETCH=ON instructs CMake to download, compile and install the libraries NetCDF95 and Jumble . If you have already installed these libraries, you can omit the FETCH option.","title":"Advanced instructions"},{"location":"installation/#troubleshooting","text":"If your installation of NetCDF-Fortran is in a non-standard location, and CMake does not find it, then re-run cmake setting the variable CMAKE_PREFIX_PATH to the directory containing it. CMake will then search ${CMAKE_PREFIX_PATH}/lib , ${CMAKE_PREFIX_PATH}/include , etc. For example: cmake . -DCMAKE_PREFIX_PATH:PATH=/path/to/my/favorite/installation On Mac OS, after downloading the application from the CMake web site, run it, then click on \u201cHow to Install For Command Line Use\u201d in the Tools menu. \u21a9","title":"Troubleshooting"},{"location":"main_memory/","text":"Main memory used At run-time, max_diff_nc allocates main memory for each new NetCDF variable it compares, then deallocates memory when it finishes comparing this variable. So main memory use will vary during execution of max_diff_nc , depending on the size of the currently compared NetCDF variable. Let us call v the memory occupied by a given NetCDF variable. v = 4 bytes times its number of elements if it is NC_FLOAT , 8 bytes times its number of elements if it is NC_DOUBLE . For a given NetCDF variable, main memory use will normally be: without computation of average order of magnitude: about 8 v if the variable is of type NC_FLOAT , 6.5 v if it is NC_DOUBLE ; with computation of average order of magnitude: about 11 v if the variable is of type NC_FLOAT , 7.5 v if it is NC_DOUBLE .","title":"Main memory used"},{"location":"main_memory/#main-memory-used","text":"At run-time, max_diff_nc allocates main memory for each new NetCDF variable it compares, then deallocates memory when it finishes comparing this variable. So main memory use will vary during execution of max_diff_nc , depending on the size of the currently compared NetCDF variable. Let us call v the memory occupied by a given NetCDF variable. v = 4 bytes times its number of elements if it is NC_FLOAT , 8 bytes times its number of elements if it is NC_DOUBLE . For a given NetCDF variable, main memory use will normally be: without computation of average order of magnitude: about 8 v if the variable is of type NC_FLOAT , 6.5 v if it is NC_DOUBLE ; with computation of average order of magnitude: about 11 v if the variable is of type NC_FLOAT , 7.5 v if it is NC_DOUBLE .","title":"Main memory used"},{"location":"other_utils/","text":"How does it compare with other similar utilities? You can obtain similar information with other tools: nccmp , cdo diff , ncdiff , Ferret \u2026 The information you get with these other tools is similar but not identical. nccmp tells you whether the contents of the two files are different. You can give nccmp a \u201ctolerance\u201d, so that if the difference (absolute or relative) between two variables is below the tolerance value, the variables are considered as identical. But nccmp does not tell you how much the difference is. cdo diff applies to climate data, while max_diff_nc is as general as NetCDF. Moreover, cdo diff splits each variable into slabs, one slab for each vertical level and each date. cdo diff gives you the difference slab by slab. As it outputs much more information than max_diff_nc , cdo diff has to output variable codes, rather than variable names. max_diff_nc is more synthetic, it gives the difference for a whole variable. Also max_diff_nc tells you at what location (the subscript list of the array) the maximum difference is reached. ncdiff is part of NCO. With ncdiff , you create a new NetCDF file. Each variable in the output NetCDF file is the difference of corresponding variables in the input files, and has the same shape. It is useful if you want to visualize the difference as a function as position. ncdiff by itself does not give you the relative difference, nor the maximum of the difference. Even with other NCO operators, it seems difficult to obtain the relative difference and the maximum of the difference for all variables. You can write a Ferret script which opens two NetCDF files and gives you statistics on the difference between two variables. However, it seems difficult to tell the script to loop over all variables. Also Ferret will not tell you at what location (the subscript list of the array) the maximum difference is reached.","title":"Alternatives"},{"location":"other_utils/#how-does-it-compare-with-other-similar-utilities","text":"You can obtain similar information with other tools: nccmp , cdo diff , ncdiff , Ferret \u2026 The information you get with these other tools is similar but not identical. nccmp tells you whether the contents of the two files are different. You can give nccmp a \u201ctolerance\u201d, so that if the difference (absolute or relative) between two variables is below the tolerance value, the variables are considered as identical. But nccmp does not tell you how much the difference is. cdo diff applies to climate data, while max_diff_nc is as general as NetCDF. Moreover, cdo diff splits each variable into slabs, one slab for each vertical level and each date. cdo diff gives you the difference slab by slab. As it outputs much more information than max_diff_nc , cdo diff has to output variable codes, rather than variable names. max_diff_nc is more synthetic, it gives the difference for a whole variable. Also max_diff_nc tells you at what location (the subscript list of the array) the maximum difference is reached. ncdiff is part of NCO. With ncdiff , you create a new NetCDF file. Each variable in the output NetCDF file is the difference of corresponding variables in the input files, and has the same shape. It is useful if you want to visualize the difference as a function as position. ncdiff by itself does not give you the relative difference, nor the maximum of the difference. Even with other NCO operators, it seems difficult to obtain the relative difference and the maximum of the difference for all variables. You can write a Ferret script which opens two NetCDF files and gives you statistics on the difference between two variables. However, it seems difficult to tell the script to loop over all variables. Also Ferret will not tell you at what location (the subscript list of the array) the maximum difference is reached.","title":"How does it compare with other similar utilities?"},{"location":"usage/","text":"Usage If you run max_diff_nc.sh with argument -h , you will get a short usage message: $ max_diff_nc.sh -h Usage: max_diff_nc.sh [OPTION]... file file-or-directory Compute and locate difference between NetCDF files. Options: -h: this help message -s: report identical variables -m: compute average order of magnitude -i: compare variables with same varid, regardless of variable name -q: only report names of variables which differ, without maximum difference -v <var>: only compare variable with name <var> max_diff_nc.sh requires two arguments: the files to compare. If the second argument is a directory then max_diff_nc.sh will look in this directory for a file with the same basename as the first argument. The order of the files is important. The first file is taken as the reference file in order to compute relative differences. If you permute the files, the absolute differences will not change but, in general, the relative differences will change. Consider a particular variable name (or variable ID, for option -i ). The program reads one array of values from each input file, corresponding to that variable name (or variable ID, for option -i ). Let us call data_old the array from the first input file and data_new the array from the second input file. We assume the arrays have the same shape (the program will stop if they do not). The program computes the \u201cabsolute difference\u201d: |\\mathrm{data\\_old} - \\mathrm{data\\_new}| and the \u201crelative difference\u201d: \\left|\\frac{\\mathrm{data\\_old} - \\mathrm{data\\_new}}{\\mathrm{data\\_old}} \\right| The program takes special care of zero values. We construct a mask that tells us, for each position (set of indices in each dimension), whether there is a zero value at that position in either array. That is, in the Fortran program, we define the logical array zero : zero = data_old == 0. .or. data_new == 0 The program only computes the relative difference where zero is false. For the absolute difference, the program gives two results: a global result, for the whole arrays, and a result for the portions of the arrays where zero is true.","title":"Usage"},{"location":"usage/#usage","text":"If you run max_diff_nc.sh with argument -h , you will get a short usage message: $ max_diff_nc.sh -h Usage: max_diff_nc.sh [OPTION]... file file-or-directory Compute and locate difference between NetCDF files. Options: -h: this help message -s: report identical variables -m: compute average order of magnitude -i: compare variables with same varid, regardless of variable name -q: only report names of variables which differ, without maximum difference -v <var>: only compare variable with name <var> max_diff_nc.sh requires two arguments: the files to compare. If the second argument is a directory then max_diff_nc.sh will look in this directory for a file with the same basename as the first argument. The order of the files is important. The first file is taken as the reference file in order to compute relative differences. If you permute the files, the absolute differences will not change but, in general, the relative differences will change. Consider a particular variable name (or variable ID, for option -i ). The program reads one array of values from each input file, corresponding to that variable name (or variable ID, for option -i ). Let us call data_old the array from the first input file and data_new the array from the second input file. We assume the arrays have the same shape (the program will stop if they do not). The program computes the \u201cabsolute difference\u201d: |\\mathrm{data\\_old} - \\mathrm{data\\_new}| and the \u201crelative difference\u201d: \\left|\\frac{\\mathrm{data\\_old} - \\mathrm{data\\_new}}{\\mathrm{data\\_old}} \\right| The program takes special care of zero values. We construct a mask that tells us, for each position (set of indices in each dimension), whether there is a zero value at that position in either array. That is, in the Fortran program, we define the logical array zero : zero = data_old == 0. .or. data_new == 0 The program only computes the relative difference where zero is false. For the absolute difference, the program gives two results: a global result, for the whole arrays, and a result for the portions of the arrays where zero is true.","title":"Usage"}]}